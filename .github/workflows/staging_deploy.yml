name: Deploy Evaluation Function to Staging

on:
  workflow_call:
    inputs:
      evaluation_function_name:
        type: string
        description: "The name of the evaluation function to deploy."
        required: true
      template-repository-name:
        type: string
        description: "The name of the repository where the template is located"
        required: true
      region:
        type: string
        description: "The AWS region to deploy to"
        required: false
      build-file:
        type: string
        description: "The path to the Dockerfile to build"
        required: false
        default: "Dockerfile"
      build-context:
        type: string
        description: "The context to use for the Docker build"
        required: false
        default: "."
      build-target:
        type: string
        description: "The target stage of the image to build"
        required: false
      build-args:
        type: string
        description: "The build arguments to pass to the Docker build"
        required: false
      build-platforms:
        type: string
        description: "The platforms to build the image for"
        default: "aws"
        required: false
      lfs:
        type: boolean
        description: "Support git LFS"
        default: false
        required: false
    secrets:
      aws-key-id:
        description: "The AWS access key ID"
        required: true
      aws-secret-key:
        description: "The AWS secret access key"
        required: true
      function-admin-api-key:
        description: "The API key for the Lambda Feedback function admin API"
        required: true
      build-secrets:
        description: "The Docker secrets to use for the build"
        required: false
      gcp_credentials:
        description: "The JSON key for deploying to GCP"
        required: false

jobs:
  build-aws:
    uses: ./.github/workflows/lambda_build.yml
    if: inputs.build-platforms == 'aws'
    strategy:
      fail-fast: false
    with:
      environment: staging
      function-name: ${{ inputs.evaluation_function_name }}
      region:  ${{ inputs.region }}
      build-file: ${{ inputs.build-file }}
      build-context: ${{ inputs.build-context }}
      build-target: ${{ inputs.build-target }}
      build-args: ${{ inputs.build-args }}
      build-platforms: ${{ inputs.build-platforms }}
      build-push: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch) }}
      lfs: ${{inputs.lfs}}
    secrets:
      aws-key-id: ${{ secrets.aws-key-id }}
      aws-secret-key: ${{ secrets.aws-secret-key }}
      build-secrets: ${{ secrets.build-secrets }}

  deploy-staging-aws:
    uses: ./.github/workflows/lambda_deploy.yml
    if: inputs.build-platforms == 'aws' && (github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch))
    needs: build-aws
    with:
      environment: staging
      api-url: https://staging-api.lambdafeedback.com
      image-name: ${{ needs.build-aws.outputs.registry }}/lambda-feedback-staging-functions-repository:${{ inputs.evaluation_function_name }}
      function-name: ${{ inputs.evaluation_function_name }}
      region: ${{ inputs.region}}
    secrets:
      aws-key-id: ${{ secrets.aws-key-id }}
      aws-secret-key: ${{ secrets.aws-secret-key }}
      function-admin-api-key: ${{ secrets.function-admin-api-key }}


  build-gcp:
    uses: ./.github/workflows/gcp_build.yml
    if: inputs.build-platforms == 'gcp'
    strategy:
      fail-fast: false
    with:
      environment: staging
      function-name: ${{ inputs.evaluation_function_name }}
      region:  ${{ inputs.region }}
      build-file: ${{ inputs.build-file }}
      build-context: ${{ inputs.build-context }}
      build-target: ${{ inputs.build-target }}
      build-args: ${{ inputs.build-args }}
      build-platforms: ${{ inputs.build-platforms }}
      build-push: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch) }}
      lfs: ${{inputs.lfs}}
    secrets:
      function-admin-api-key: ${{ secrets.function-admin-api-key }}
      gcp_credentials: ${{ secrets.gcp_credentials }}

  deploy-gcp-staging:
    uses: ./.github/workflows/gcp_deploy.yml
    if: inputs.build-platforms == 'gcp' && github.repository != inputs.template-repository-name && (github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch))
    needs: build-gcp
    with:
      environment: staging
      api-url: https://prod-api.lambdafeedback.com
      repo:  ${{ inputs.region }}-docker.pkg.dev/wolfram-evaluation-functions/evaluation-function-staging
      image-name: ${{ inputs.evaluation_function_name }}
      function-name: ${{ inputs.evaluation_function_name }}-staging
      region: ${{ inputs.region }}
    secrets:
      function-admin-api-key: ${{ secrets.function-admin-api-key }}
      gcp_credentials: ${{ secrets.gcp_credentials }}